

CREATE TABLE public.customer_tables (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	seats_count int4 NOT NULL,
	qr_code varchar(255) NULL,
	is_taken bool NOT NULL,
	join_code varchar(255) NULL,
	CONSTRAINT "PK_customer_tables" PRIMARY KEY (id)
);


CREATE TABLE public.discounts (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	discount_code varchar(255) NOT NULL,
	stand_until timestamp NULL,
	discount_proc int4 NOT NULL,
	CONSTRAINT "PK_discounts" PRIMARY KEY (id)
);


CREATE TABLE public.dish_categories (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(255) NOT NULL,
	CONSTRAINT "PK_dish_categories" PRIMARY KEY (id)
);


CREATE TABLE public.event_type (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" bpchar(255) NOT NULL,
	CONSTRAINT "PK_event_type" PRIMARY KEY (id)
);


CREATE TABLE public.ingredients (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(255) NOT NULL,
	CONSTRAINT "PK_ingredients" PRIMARY KEY (id)
);


CREATE TABLE public.menus (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(255) NOT NULL,
	mon bool NOT NULL,
	tue bool NOT NULL,
	wed bool NOT NULL,
	thu bool NOT NULL,
	fri bool NOT NULL,
	sat bool NOT NULL,
	sun bool NOT NULL,
	time_from time NULL,
	time_until time NULL,
	date_from date NULL,
	date_until date NULL,
	is_active bool NOT NULL,
	CONSTRAINT "PK_menus" PRIMARY KEY (id)
);


CREATE TABLE public.user_role (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" bpchar(255) NOT NULL,
	CONSTRAINT "PK_user_role" PRIMARY KEY (id)
);


CREATE TABLE public.bills (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	date_time timestamp NULL DEFAULT CURRENT_TIMESTAMP,
	tips float8 NULL DEFAULT 0.0,
	amount float8 NOT NULL,
	is_paid bool NOT NULL,
	evaluation varchar(255) NULL,
	fk_discounts int8 NULL,
	"FkCustomerTables" int8 NOT NULL DEFAULT 0,
	"FkCustomerTablesNavigationId" int8 NULL,
	CONSTRAINT "PK_bills" PRIMARY KEY (id),
	CONSTRAINT "FK_bills_customer_tables_FkCustomerTablesNavigationId" FOREIGN KEY ("FkCustomerTablesNavigationId") REFERENCES customer_tables(id) ON DELETE RESTRICT,
	CONSTRAINT fkc_discounts FOREIGN KEY (fk_discounts) REFERENCES discounts(id) ON DELETE RESTRICT
);
CREATE INDEX "IX_bills_FkCustomerTablesNavigationId" ON public.bills USING btree ("FkCustomerTablesNavigationId");
CREATE INDEX "IX_bills_fk_discounts" ON public.bills USING btree (fk_discounts);

CREATE TABLE public.dishes (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(255) NOT NULL,
	description varchar(255) NULL,
	price float8 NOT NULL,
	calories int4 NULL,
	discount float8 NULL,
	fk_dish_categories int8 NULL,
	CONSTRAINT "PK_dishes" PRIMARY KEY (id),
	CONSTRAINT fkc_dish_categories FOREIGN KEY (fk_dish_categories) REFERENCES dish_categories(id) ON DELETE RESTRICT
);
CREATE INDEX "IX_dishes_fk_dish_categories" ON public.dishes USING btree (fk_dish_categories);


CREATE TABLE public.events (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"type" int8 NOT NULL,
	fk_bills int8 NOT NULL DEFAULT 0,
	CONSTRAINT "PK_events" PRIMARY KEY (id),
	CONSTRAINT events_type_fkey FOREIGN KEY (type) REFERENCES event_type(id) ON DELETE RESTRICT,
	CONSTRAINT fkc_bills FOREIGN KEY (fk_bills) REFERENCES bills(id) ON DELETE RESTRICT
);
CREATE INDEX "IX_events_fk_bills" ON public.events USING btree (fk_bills);
CREATE INDEX "IX_events_type" ON public.events USING btree (type);



CREATE TABLE public.menu_dishes (
	fk_dishes int8 NOT NULL,
	fk_menus int8 NOT NULL,
	date_from timestamp NULL,
	date_until timestamp NULL,
	CONSTRAINT menu_dishes_pkey PRIMARY KEY (fk_dishes, fk_menus),
	CONSTRAINT fkc_dishes FOREIGN KEY (fk_dishes) REFERENCES dishes(id) ON DELETE RESTRICT,
	CONSTRAINT fkc_menus FOREIGN KEY (fk_menus) REFERENCES menus(id) ON DELETE CASCADE
);
CREATE INDEX "IX_menu_dishes_fk_menus" ON public.menu_dishes USING btree (fk_menus);


CREATE TABLE public.registered_users (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar(255) NOT NULL,
	surname varchar(255) NOT NULL,
	"password" varchar(255) NOT NULL,
	phone varchar(255) NULL,
	email varchar(255) NOT NULL,
	birth_date date NOT NULL,
	is_blocked bool NOT NULL,
	"role" int8 NOT NULL,
	CONSTRAINT "PK_registered_users" PRIMARY KEY (id),
	CONSTRAINT registered_users_role_fkey FOREIGN KEY (role) REFERENCES user_role(id) ON DELETE RESTRICT
);
CREATE INDEX "IX_registered_users_role" ON public.registered_users USING btree (role);


CREATE TABLE public.dish_ingredients (
	fk_dishes int8 NOT NULL,
	fk_ingredients int8 NOT NULL,
	quantity float8 NOT NULL,
	CONSTRAINT dish_ingredients_pkey PRIMARY KEY (fk_dishes, fk_ingredients),
	CONSTRAINT fkc_dishes FOREIGN KEY (fk_dishes) REFERENCES dishes(id) ON DELETE RESTRICT,
	CONSTRAINT fkc_ingredients FOREIGN KEY (fk_ingredients) REFERENCES ingredients(id) ON DELETE RESTRICT
);
CREATE INDEX "IX_dish_ingredients_fk_ingredients" ON public.dish_ingredients USING btree (fk_ingredients);


CREATE TABLE public.orders (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	date_time timestamp NULL DEFAULT CURRENT_TIMESTAMP,
	temperature float8 NULL,
	submitted bool NOT NULL,
	served bool NOT NULL,
	fk_bills int8 NULL,
	fk_registered_users int8 NULL,
	CONSTRAINT "PK_orders" PRIMARY KEY (id),
	CONSTRAINT fkc_bills FOREIGN KEY (fk_bills) REFERENCES bills(id) ON DELETE RESTRICT,
	CONSTRAINT fkc_registered_users FOREIGN KEY (fk_registered_users) REFERENCES registered_users(id) ON DELETE SET NULL
);
CREATE INDEX "IX_orders_fk_bills" ON public.orders USING btree (fk_bills);
CREATE INDEX "IX_orders_fk_registered_users" ON public.orders USING btree (fk_registered_users);

CREATE TABLE public.order_dishes (
	fk_orders int8 NOT NULL,
	fk_dishes int8 NOT NULL,
	quantity int4 NOT NULL,
	"comment" varchar(255) NULL,
	CONSTRAINT order_dishes_pkey PRIMARY KEY (fk_dishes, fk_orders),
	CONSTRAINT fkc_dishes FOREIGN KEY (fk_dishes) REFERENCES dishes(id) ON DELETE RESTRICT,
	CONSTRAINT fkc_orders FOREIGN KEY (fk_orders) REFERENCES orders(id) ON DELETE CASCADE
);
CREATE INDEX "IX_order_dishes_fk_orders" ON public.order_dishes USING btree (fk_orders);




INSERT INTO public.customer_tables (seats_count,qr_code,is_taken,join_code) VALUES 
(6,'http://localhost:65312/TakeTable?id=1',false,'DEF')
,(4,'http://localhost:65312/TakeTable?id=2',false,'wxz')
,(4,'http://localhost:65312/TakeTable?id=3',false,'wxz')
;

INSERT INTO public.discounts (discount_code,stand_until,discount_proc) VALUES 
('ST101','2020-12-31 00:00:00.000',15)
,('ST102','2020-01-31 00:00:00.000',25)
;

INSERT INTO public.dish_categories (title) VALUES 
('Picos')
,('Gėrimai')
;

INSERT INTO public.dishes (title,description,price,calories,discount,fk_dish_categories) VALUES 
('Capriciosa','Labai skani pica',11.99,300,20,1)
,('Cola','Nesveika, bet skanu',1.99,-1,0,2)
,('Arbata','Žalioji arbata, rytine',1,20,0,2)
,('Vanduo','500ml',1.5,0,15,2)
,('Gira','330ml',1.65,20,50,2)
,('Pepsi','330ml',1.75,300,0,2)
,('JD naminis limonadas','Skirtingu skoniu.',1.45,20,0,2)
,('Pepsi MAX','330ml',1.75,0,0,2)
,('TEXAS COWBOY','Naminis pomidoru padazas - letai kepta plesyta kiauliena - musu gamintas kepsniu padazas',10.5,200,0,1)
,('MESOS OMG!','Trinti pomidorai - skamorca - mocarela - pekorino suris - peperoni desra - kepsniu padazas',12,1520,30,1)
;

INSERT INTO public.dishes (title,description,price,calories,discount,fk_dish_categories) VALUES 
('BIG TONY''S','Pomidoru padazas - peperoni desra - pankoliu ir anyziumi gardintos desreles - mocarela - marinuoti raudonieji',11,400,0,1)
,('The Wall Street','Pomidoru padazas, malta peperoni desra, kepti cesnakai, karamelizuoti svogunai, mocarela, grazgarstes',9,1500,20,1)
,('FRIKIN CHICKEN','Pomidoru padazas - marinuota kepta vistiena - musu gamintas kepsniu padazas - parmezanas',10.5,2000,50,1)
,('Yankee Burger','Pomidoru padazas, raudonieji svogunai, letai kepta plesyta jautiena, marinuoti agurkeliai, cederis',16,2000,0,1)
;

INSERT INTO public.event_type ("name") VALUES 
('Atnešti sąskaita                                                                                                                                                                                                                                               ')
,('Užsakymo atšaukimas                                                                                                                                                                                                                                            ')
,('Stalas buvo užimtas                                                                                                                                                                                                                                            ')
,('Naujas užsakymas                                                                                                                                                                                                                                               ')
;

INSERT INTO public.ingredients (title) VALUES 
('Kumpis')
,('Sūris')
;




INSERT INTO public.menus (title,mon,tue,wed,thu,fri,sat,sun,time_from,time_until,date_from,date_until,is_active) VALUES 
('Pusryčių meniu',true,true,true,true,true,true,true,'06:00:00','10:00:00',NULL,NULL,true)
,('Pagrindinis meniu',true,true,true,true,true,true,true,NULL,NULL,NULL,NULL,true)
,('Brooklyn Brothers',true,true,true,true,true,true,true,NULL,NULL,NULL,NULL,true)
;



INSERT INTO public.user_role ("name") VALUES 
('Administratorius                                                                                                                                                                                                                                               ')
,('Padavėjas                                                                                                                                                                                                                                                      ')
;

INSERT INTO public.registered_users ("name",surname,"password",phone,email,birth_date,is_blocked,"role") VALUES 
('Jonas','Jonaitis','Password123','860000000','email@email.com','2000-01-01',false,1)
,('Jozefina','Jozefinaite','Password456','','','2001-01-01',false,2)
,('Petras','Petraitis','Secret123','','','2002-01-01',false,2)
;


INSERT INTO public.bills (date_time,tips,amount,is_paid,evaluation,fk_discounts,"FkCustomerTables","FkCustomerTablesNavigationId") VALUES 
('2020-04-01 00:00:00.000',10,50.45,true,'Labai skanus maistas',1,1,NULL)
,('2020-05-01 00:00:00.000',0,5.39,true,'Malonus aptarnavimas',2,2,NULL)
,('2020-05-01 00:00:00.000',0,0,true,'',NULL,1,NULL)
,('2020-05-01 00:00:00.000',0,0,true,'',NULL,1,NULL)
,('2020-05-01 00:00:00.000',0,0,true,'',NULL,3,NULL);



INSERT INTO public.menu_dishes (fk_dishes,fk_menus,date_from,date_until) VALUES 
(1,1,NULL,NULL)
,(2,1,NULL,NULL)
,(3,1,NULL,NULL)
,(1,2,NULL,NULL)
,(2,2,NULL,NULL)
,(4,3,NULL,NULL)
,(5,3,NULL,NULL)
,(6,3,NULL,NULL)
,(7,3,NULL,NULL)
,(8,3,NULL,NULL);

INSERT INTO public.menu_dishes (fk_dishes,fk_menus,date_from,date_until) VALUES 
(9,3,NULL,NULL)
,(10,3,NULL,NULL)
,(11,3,NULL,NULL)
,(12,3,NULL,NULL)
,(13,3,NULL,NULL)
,(14,3,NULL,NULL);


INSERT INTO public.orders (date_time,temperature,submitted,served,fk_bills,fk_registered_users) VALUES 
('2020-04-01 00:00:00.000',15,true,true,1,2)
,('2020-05-01 00:00:00.000',17,true,true,2,3)
,('2020-05-16 00:00:00.000',19,true,true,3,NULL)
,('2020-05-16 00:00:00.000',19,true,true,5,NULL)
;

INSERT INTO public.events ("type",fk_bills) VALUES 
(3,1)
,(4,1)
,(1,1)
,(3,2)
,(4,2)
,(3,3)
,(3,4);

INSERT INTO public.order_dishes (fk_orders,fk_dishes,quantity,"comment") VALUES 
(1,1,2,'Viena pica be pado')
,(1,2,2,'Be cukraus')
,(2,1,1,'')
,(3,11,1,'')
;
